% ----- Graph Representation -----
% edge(Node, Neighbor, Cost)
edge(a, b, 1).
edge(a, c, 1).
edge(b, d, 1).
edge(b, e, 1).
edge(c, f, 1).
edge(c, g, 1).

% ----- Heuristic values -----
% h(Node, HeuristicValue)
h(a, 5).
h(b, 4).
h(c, 3).
h(d, 6).
h(e, 2).
h(f, 1).
h(g, 0).   % Goal node has heuristic 0

% ----- Best First Search -----
best_first(Start, Goal, Path) :-
    bestfs([[Start]], Goal, Path).

% Case 1: Found Goal
bestfs([[Goal|Rest]|_], Goal, Path) :-
    reverse([Goal|Rest], Path).

% Case 2: Expand node with lowest heuristic
bestfs([[Node|Rest]|Others], Goal, Path) :-
    findall([Next,Node|Rest],
            (edge(Node, Next, _), \+ member(Next, [Node|Rest])),
            NewPaths),
    add_heuristic(NewPaths, ScoredPaths),
    append(Others, ScoredPaths, AllPaths),
    sort(1, @=<, AllPaths, Sorted),   % Sort by heuristic
    strip_heuristic(Sorted, Queued),
    bestfs(Queued, Goal, Path).

% ----- Helper: attach heuristic -----
add_heuristic([], []).
add_heuristic([[Node|Rest]|T], [[H,[Node|Rest]]|NT]) :-
    h(Node,H),
    add_heuristic(T,NT).

% ----- Helper: strip heuristic -----
strip_heuristic([],[]).
strip_heuristic([[_,Path]|T],[Path|NT]) :-
    strip_heuristic(T,NT).
